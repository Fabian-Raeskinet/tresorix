@page "/platforms"
@using Front.Components
@using Tresorix.Contracts.Platforms
@inject HttpClient Http

<PageTitle>Platforms</PageTitle>

<h1>Platforms</h1>

@if (_platforms == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <PlatformDetails Platforms="@_platforms.ToList()" OnToggleDetails="ToggleDetails"></PlatformDetails>
    if (_selectedPlatform is not null)
    {
        <AssetDetails Assets="@_selectedPlatform.Assets"></AssetDetails>
        <TransactionDetails Transactions="@_selectedPlatform.Transactions"></TransactionDetails>

        @if (_predictions is not null)
        {
            <PlatformPredictionDetails PlatformPredictions="@_predictions.ToList()"></PlatformPredictionDetails>
        }
    }
}

@code {
    private PlatformResponse[]? _platforms;
    private PlatformResponse? _selectedPlatform;
    private PlatformPredictionResponse[]? _predictions;

    protected override async Task OnInitializedAsync()
    {
        _platforms = await Http.GetFromJsonAsync<PlatformResponse[]>("api/Platform");
    }

    private async Task ToggleDetails(PlatformResponse platform)
    {
        var years = new[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 };

        var query = string.Join("&", years.Select(year => $"years={year}"));
        _predictions = await Http.GetFromJsonAsync<PlatformPredictionResponse[]>($"api/Platform/{platform.Id}?{query}");

        _selectedPlatform = platform;
    }

}